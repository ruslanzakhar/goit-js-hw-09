{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,CAACM,SAAAT,EAAUU,MAAAT,IAEnBG,EAAO,CAACK,SAAAT,EAAUU,MAAAT,GAAO,GAE1BA,EAAM,IAGVU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBE,EAAAf,GAASgB,OAAOC,QAAQ,uBAAqBL,QAAiBC,MAAU,IAEzEK,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MAClBE,EAAAf,GAASgB,OAAOG,QAAQ,sBAAoBP,QAAeC,MAAU,G,CAK1DO,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAA0BC,GACxBA,EAAIC,iBACJ,MACEC,UAAUZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,IACvBJ,EAAIK,cACR,IAAIC,EAAaC,OAAOP,EAAIK,cAAcf,MAAMkB,OAChD,MAAMC,EAAYF,OAAOP,EAAIK,cAAcF,KAAKK,OAC1CE,EAAWH,OAAOP,EAAIK,cAAcD,OAAOI,OAEjD,IAAI,IAAIG,EAAI,EAAGA,EAAID,EAAUC,GAAK,EAChChC,EAAcgC,EAAGL,GACjBA,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n  promise\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n}\n\nconst formEl = document.querySelector(`.form`);\n\nformEl.addEventListener(\"submit\", onBtnSubmitClick);\n\nfunction onBtnSubmitClick(evt){\n  evt.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = evt.currentTarget;\n  let firstDelay = Number(evt.currentTarget.delay.value);\n  const stepDelay = Number(evt.currentTarget.step.value);\n  const amountEl = Number(evt.currentTarget.amount.value);\n\n  for(let i = 1; i < amountEl; i += 1){\n    createPromise(i, firstDelay);\n    firstDelay += stepDelay;\n  };\n\n};"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","$parcel$interopDefault","Notify","success","catch","failure","document","querySelector","addEventListener","evt","preventDefault","elements","step","amount","currentTarget","firstDelay","Number","value","stepDelay","amountEl","i"],"version":3,"file":"03-promises.7b47f0ab.js.map"}